openapi: 3.1.0
info:
  title: Task Management API
  description: API for managing tasks with full documentation
  version: 1.0.0


paths:
  /:
    get:
      summary: Root endpoint
      description: Returns API information and status
      tags:
        - System
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "operational"
                  version:
                    type: string
                    example: "1.0.0"
                  documentation:
                    type: string
                    example: "/api-docs"

  /tasks:
    get:
      summary: Get all tasks
      description: Retrieve a list of all tasks
      tags:
        - Tasks
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      summary: Create a new task
      description: Add a new task to the system
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tasks/{taskId}:
    parameters:
      - name: taskId
        in: path
        required: true
        description: Unique identifier of the task
        schema:
          type: string
    
    get:
      summary: Get task by ID
      description: Retrieve a specific task by its ID
      tags:
        - Tasks
      responses:
        '200':
          description: Task found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      summary: Update task
      description: Update an existing task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      summary: Delete task
      description: Remove a task from the system
      tags:
        - Tasks
      responses:
        '204':
          description: Task deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the task
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Title of the task
          example: "Complete API documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Write comprehensive OpenAPI documentation for all endpoints"
        status:
          type: string
          description: Current status of the task
          enum: [pending, in-progress, completed]
          example: "pending"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
      required:
        - id
        - title
        - description
        - status
        - createdAt
    
    TaskInput:
      type: object
      properties:
        title:
          type: string
          description: Title of the task
          example: "Complete API documentation"
        description:
          type: string
          description: Detailed description of the task
          example: "Write comprehensive OpenAPI documentation for all endpoints"
        status:
          type: string
          description: Current status of the task
          enum: [pending, in-progress, completed]
          example: "pending"
      required:
        - title
        - description

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid input parameters"
              details:
                type: string
                example: "Title and description are required"
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Resource not found"
              details:
                type: string
                example: "Task with specified ID does not exist"
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
              details:
                type: string
                example: "An unexpected error occurred"
